type Query {
  asset(id: String!, preview: Boolean, locale: String): Asset
  assetCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: AssetFilter
    order: [AssetOrder]
  ): AssetCollection
  galleryImages(id: String!, preview: Boolean, locale: String): GalleryImages
  galleryImagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: GalleryImagesFilter
    order: [GalleryImagesOrder]
  ): GalleryImagesCollection
  bannerImages(id: String!, preview: Boolean, locale: String): BannerImages
  bannerImagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: BannerImagesFilter
    order: [BannerImagesOrder]
  ): BannerImagesCollection
  commissionsPage(
    id: String!
    preview: Boolean
    locale: String
  ): CommissionsPage
  commissionsPageCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: CommissionsPageFilter
    order: [CommissionsPageOrder]
  ): CommissionsPageCollection
  product(id: String!, preview: Boolean, locale: String): Product
  productCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: ProductFilter
    order: [ProductOrder]
  ): ProductCollection
  aboutSection(id: String!, preview: Boolean, locale: String): AboutSection
  aboutSectionCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: AboutSectionFilter
    order: [AboutSectionOrder]
  ): AboutSectionCollection
  header(id: String!, preview: Boolean, locale: String): Header
  headerCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: HeaderFilter
    order: [HeaderOrder]
  ): HeaderCollection
  contactDetails(id: String!, preview: Boolean, locale: String): ContactDetails
  contactDetailsCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: ContactDetailsFilter
    order: [ContactDetailsOrder]
  ): ContactDetailsCollection
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: EntryFilter
    order: [EntryOrder]
  ): EntryCollection
}

# Represents a binary file in a space. An asset can be any file type.
type Asset {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  title(locale: String): String
  description(locale: String): String
  contentType(locale: String): String
  fileName(locale: String): String
  size(locale: String): Int
  url(transform: ImageTransformOptions, locale: String): String
  width(locale: String): Int
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
}

type Sys {
  id: String!
  spaceId: String!
  environmentId: String!
  publishedAt: DateTime
  firstPublishedAt: DateTime
  publishedVersion: Int
}

# A date-time string at UTC, such as 2007-12-03T10:15:30Z,
#     compliant with the 'date-time' format outlined in section 5.6 of
#     the RFC 3339 profile of the ISO 8601 standard for representation
#     of dates and times using the Gregorian calendar.
scalar DateTime

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

# Represents a tag entity for finding and organizing content easily.
#     Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
type ContentfulTag {
  id: String
  name: String
}

input ImageTransformOptions {
  # Desired width in pixels. Defaults to the original image width.
  width: Dimension

  # Desired height in pixels. Defaults to the original image height.
  height: Dimension

  # Desired quality of the image in percents.
  #         Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  quality: Quality

  # Desired corner radius in pixels.
  #         Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
  #         Defaults to `0`. Uses desired background color as padding color,
  #         unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  cornerRadius: Int

  # Desired resize strategy. Defaults to `FIT`.
  resizeStrategy: ImageResizeStrategy

  # Desired resize focus area. Defaults to `CENTER`.
  resizeFocus: ImageResizeFocus

  # Desired background color, used with corner radius or `PAD` resize strategy.
  #         Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  backgroundColor: HexColor

  # Desired image format. Defaults to the original image format.
  format: ImageFormat
}

# The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
scalar Dimension

# The 'Quality' type represents quality as whole numeric values between `1` and `100`.
scalar Quality

enum ImageResizeStrategy {
  # Resizes the image to fit into the specified dimensions.
  FIT

  # Resizes the image to the specified dimensions, padding the image if needed.
  #         Uses desired background color as padding color.
  PAD

  # Resizes the image to the specified dimensions, cropping the image if needed.
  FILL

  # Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  SCALE

  # Crops a part of the original image to fit into the specified dimensions.
  CROP

  # Creates a thumbnail from the image.
  THUMB
}

enum ImageResizeFocus {
  # Focus the resizing on the center.
  CENTER

  # Focus the resizing on the top.
  TOP

  # Focus the resizing on the top right.
  TOP_RIGHT

  # Focus the resizing on the right.
  RIGHT

  # Focus the resizing on the bottom right.
  BOTTOM_RIGHT

  # Focus the resizing on the bottom.
  BOTTOM

  # Focus the resizing on the bottom left.
  BOTTOM_LEFT

  # Focus the resizing on the left.
  LEFT

  # Focus the resizing on the top left.
  TOP_LEFT

  # Focus the resizing on the largest face.
  FACE

  # Focus the resizing on the area containing all the faces.
  FACES
}

# The 'HexColor' type represents color in `rgb:ffffff` string format.
scalar HexColor

enum ImageFormat {
  # JPG image format.
  JPG

  # Progressive JPG format stores multiple passes of an image in progressively higher detail.
  #         When a progressive image is loading, the viewer will first see a lower quality pixelated version which
  #         will gradually improve in detail, until the image is fully downloaded. This is to display an image as
  #         early as possible to make the layout look as designed.
  JPG_PROGRESSIVE

  # PNG image format
  PNG

  # 8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
  #         The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  PNG8

  # WebP image format.
  WEBP
  AVIF
}

type AssetLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
  galleryImagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    order: [AssetLinkingCollectionsGalleryImagesCollectionOrder]
  ): GalleryImagesCollection
  bannerImagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    order: [AssetLinkingCollectionsBannerImagesCollectionOrder]
  ): BannerImagesCollection
  commissionsPageCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    order: [AssetLinkingCollectionsCommissionsPageCollectionOrder]
  ): CommissionsPageCollection
  productCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    order: [AssetLinkingCollectionsProductCollectionOrder]
  ): ProductCollection
  aboutSectionCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    order: [AssetLinkingCollectionsAboutSectionCollectionOrder]
  ): AboutSectionCollection
  headerCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    order: [AssetLinkingCollectionsHeaderCollectionOrder]
  ): HeaderCollection
}

type EntryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Entry]!
}

interface Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
}

type GalleryImagesCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [GalleryImages]!
}

# [See type definition](https://app.contentful.com/spaces/bu7m9d6pqhmj/content_types/galleryImages)
type GalleryImages implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): GalleryImagesLinkingCollections
  imagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
  unique(locale: String): Int
}

type GalleryImagesLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type AssetCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Asset]!
}

enum AssetLinkingCollectionsGalleryImagesCollectionOrder {
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type BannerImagesCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [BannerImages]!
}

# [See type definition](https://app.contentful.com/spaces/bu7m9d6pqhmj/content_types/bannerImages)
type BannerImages implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): BannerImagesLinkingCollections
  imagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
  unique(locale: String): Int
}

type BannerImagesLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

enum AssetLinkingCollectionsBannerImagesCollectionOrder {
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type CommissionsPageCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [CommissionsPage]!
}

# [See type definition](https://app.contentful.com/spaces/bu7m9d6pqhmj/content_types/commissionsPage)
type CommissionsPage implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): CommissionsPageLinkingCollections
  title(locale: String): String
  content(locale: String): CommissionsPageContent
  imagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
  unique(locale: String): Boolean
}

type CommissionsPageLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type CommissionsPageContent {
  json: JSON!
  links: CommissionsPageContentLinks!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

type CommissionsPageContentLinks {
  entries: CommissionsPageContentEntries!
  assets: CommissionsPageContentAssets!
  resources: CommissionsPageContentResources!
}

type CommissionsPageContentEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type CommissionsPageContentAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type CommissionsPageContentResources {
  block: [ResourceLink!]!
  inline: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
}

type ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  type: String!
  urn: String!
  linkType: String!
}

enum AssetLinkingCollectionsCommissionsPageCollectionOrder {
  title_ASC
  title_DESC
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ProductCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Product]!
}

# [See type definition](https://app.contentful.com/spaces/bu7m9d6pqhmj/content_types/product)
type Product implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ProductLinkingCollections
  name(locale: String): String
  description(locale: String): ProductDescription
  price(locale: String): String
  promotion(locale: String): String
  primaryImage(preview: Boolean, locale: String): Asset
  secondaryImagesCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
}

type ProductLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type ProductDescription {
  json: JSON!
  links: ProductDescriptionLinks!
}

type ProductDescriptionLinks {
  entries: ProductDescriptionEntries!
  assets: ProductDescriptionAssets!
  resources: ProductDescriptionResources!
}

type ProductDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type ProductDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type ProductDescriptionResources {
  block: [ResourceLink!]!
  inline: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
}

enum AssetLinkingCollectionsProductCollectionOrder {
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  promotion_ASC
  promotion_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type AboutSectionCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [AboutSection]!
}

# [See type definition](https://app.contentful.com/spaces/bu7m9d6pqhmj/content_types/aboutSection)
type AboutSection implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): AboutSectionLinkingCollections
  heading(locale: String): String
  content(locale: String): AboutSectionContent
  image(preview: Boolean, locale: String): Asset
}

type AboutSectionLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type AboutSectionContent {
  json: JSON!
  links: AboutSectionContentLinks!
}

type AboutSectionContentLinks {
  entries: AboutSectionContentEntries!
  assets: AboutSectionContentAssets!
  resources: AboutSectionContentResources!
}

type AboutSectionContentEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type AboutSectionContentAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type AboutSectionContentResources {
  block: [ResourceLink!]!
  inline: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
}

enum AssetLinkingCollectionsAboutSectionCollectionOrder {
  heading_ASC
  heading_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type HeaderCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Header]!
}

# [See type definition](https://app.contentful.com/spaces/bu7m9d6pqhmj/content_types/header)
type Header implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): HeaderLinkingCollections
  title(locale: String): String
  tagline(locale: String): HeaderTagline
  logo(preview: Boolean, locale: String): Asset
  unique(locale: String): Int
}

type HeaderLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type HeaderTagline {
  json: JSON!
  links: HeaderTaglineLinks!
}

type HeaderTaglineLinks {
  entries: HeaderTaglineEntries!
  assets: HeaderTaglineAssets!
  resources: HeaderTaglineResources!
}

type HeaderTaglineEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HeaderTaglineAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HeaderTaglineResources {
  block: [ResourceLink!]!
  inline: [ResourceLink!]!
  hyperlink: [ResourceLink!]!
}

enum AssetLinkingCollectionsHeaderCollectionOrder {
  title_ASC
  title_DESC
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input AssetFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  description_exists: Boolean
  description: String
  description_not: String
  description_in: [String]
  description_not_in: [String]
  description_contains: String
  description_not_contains: String
  url_exists: Boolean
  url: String
  url_not: String
  url_in: [String]
  url_not_in: [String]
  url_contains: String
  url_not_contains: String
  size_exists: Boolean
  size: Int
  size_not: Int
  size_in: [Int]
  size_not_in: [Int]
  size_gt: Int
  size_gte: Int
  size_lt: Int
  size_lte: Int
  contentType_exists: Boolean
  contentType: String
  contentType_not: String
  contentType_in: [String]
  contentType_not_in: [String]
  contentType_contains: String
  contentType_not_contains: String
  fileName_exists: Boolean
  fileName: String
  fileName_not: String
  fileName_in: [String]
  fileName_not_in: [String]
  fileName_contains: String
  fileName_not_contains: String
  width_exists: Boolean
  width: Int
  width_not: Int
  width_in: [Int]
  width_not_in: [Int]
  width_gt: Int
  width_gte: Int
  width_lt: Int
  width_lte: Int
  height_exists: Boolean
  height: Int
  height_not: Int
  height_in: [Int]
  height_not_in: [Int]
  height_gt: Int
  height_gte: Int
  height_lt: Int
  height_lte: Int
  OR: [AssetFilter]
  AND: [AssetFilter]
}

input SysFilter {
  id_exists: Boolean
  id: String
  id_not: String
  id_in: [String]
  id_not_in: [String]
  id_contains: String
  id_not_contains: String
  publishedAt_exists: Boolean
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime]
  publishedAt_not_in: [DateTime]
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_not_in: [DateTime]
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  publishedVersion_exists: Boolean
  publishedVersion: Float
  publishedVersion_not: Float
  publishedVersion_in: [Float]
  publishedVersion_not_in: [Float]
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_lt: Float
  publishedVersion_lte: Float
}

input ContentfulMetadataFilter {
  tags_exists: Boolean
  tags: ContentfulMetadataTagsFilter
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_some: [String]
  id_contains_none: [String]
}

enum AssetOrder {
  url_ASC
  url_DESC
  size_ASC
  size_DESC
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  width_ASC
  width_DESC
  height_ASC
  height_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input GalleryImagesFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  imagesCollection_exists: Boolean
  unique_exists: Boolean
  unique: Int
  unique_not: Int
  unique_in: [Int]
  unique_not_in: [Int]
  unique_gt: Int
  unique_gte: Int
  unique_lt: Int
  unique_lte: Int
  OR: [GalleryImagesFilter]
  AND: [GalleryImagesFilter]
}

enum GalleryImagesOrder {
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input BannerImagesFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  imagesCollection_exists: Boolean
  unique_exists: Boolean
  unique: Int
  unique_not: Int
  unique_in: [Int]
  unique_not_in: [Int]
  unique_gt: Int
  unique_gte: Int
  unique_lt: Int
  unique_lte: Int
  OR: [BannerImagesFilter]
  AND: [BannerImagesFilter]
}

enum BannerImagesOrder {
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input CommissionsPageFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  content_exists: Boolean
  content_contains: String
  content_not_contains: String
  imagesCollection_exists: Boolean
  unique_exists: Boolean
  unique: Boolean
  unique_not: Boolean
  OR: [CommissionsPageFilter]
  AND: [CommissionsPageFilter]
}

enum CommissionsPageOrder {
  title_ASC
  title_DESC
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input ProductFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  name_exists: Boolean
  name: String
  name_not: String
  name_in: [String]
  name_not_in: [String]
  name_contains: String
  name_not_contains: String
  description_exists: Boolean
  description_contains: String
  description_not_contains: String
  price_exists: Boolean
  price: String
  price_not: String
  price_in: [String]
  price_not_in: [String]
  price_contains: String
  price_not_contains: String
  promotion_exists: Boolean
  promotion: String
  promotion_not: String
  promotion_in: [String]
  promotion_not_in: [String]
  promotion_contains: String
  promotion_not_contains: String
  primaryImage_exists: Boolean
  secondaryImagesCollection_exists: Boolean
  OR: [ProductFilter]
  AND: [ProductFilter]
}

enum ProductOrder {
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  promotion_ASC
  promotion_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input AboutSectionFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  heading_exists: Boolean
  heading: String
  heading_not: String
  heading_in: [String]
  heading_not_in: [String]
  heading_contains: String
  heading_not_contains: String
  content_exists: Boolean
  content_contains: String
  content_not_contains: String
  image_exists: Boolean
  OR: [AboutSectionFilter]
  AND: [AboutSectionFilter]
}

enum AboutSectionOrder {
  heading_ASC
  heading_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input HeaderFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  tagline_exists: Boolean
  tagline_contains: String
  tagline_not_contains: String
  logo_exists: Boolean
  unique_exists: Boolean
  unique: Int
  unique_not: Int
  unique_in: [Int]
  unique_not_in: [Int]
  unique_gt: Int
  unique_gte: Int
  unique_lt: Int
  unique_lte: Int
  OR: [HeaderFilter]
  AND: [HeaderFilter]
}

enum HeaderOrder {
  title_ASC
  title_DESC
  unique_ASC
  unique_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

# [See type definition](https://app.contentful.com/spaces/bu7m9d6pqhmj/content_types/contactDetails)
type ContactDetails implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContactDetailsLinkingCollections
  email(locale: String): String
  whatsapp(locale: String): String
  instagram(locale: String): String
}

type ContactDetailsLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type ContactDetailsCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [ContactDetails]!
}

input ContactDetailsFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  email_exists: Boolean
  email: String
  email_not: String
  email_in: [String]
  email_not_in: [String]
  email_contains: String
  email_not_contains: String
  whatsapp_exists: Boolean
  whatsapp: String
  whatsapp_not: String
  whatsapp_in: [String]
  whatsapp_not_in: [String]
  whatsapp_contains: String
  whatsapp_not_contains: String
  instagram_exists: Boolean
  instagram: String
  instagram_not: String
  instagram_in: [String]
  instagram_not_in: [String]
  instagram_contains: String
  instagram_not_contains: String
  OR: [ContactDetailsFilter]
  AND: [ContactDetailsFilter]
}

enum ContactDetailsOrder {
  email_ASC
  email_DESC
  whatsapp_ASC
  whatsapp_DESC
  instagram_ASC
  instagram_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input EntryFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  OR: [EntryFilter]
  AND: [EntryFilter]
}

enum EntryOrder {
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}
